;
;	Cobalt CPU Microcode
;

revision 1

;
;	Macros
;

; NOTE If instructions were always encoded at least 2-bytes then
;	   the prefetch could also be 1 cycle
# FETCH1
	R WORD CS:$IPO II IPC1
END
	
# FETCH2
	R WORD CS:$IPO II IPC2
END

# FETCH4
	R WORD CS:$IPO II IPC4
END

;
;	Opcodes
;

0 00000 NOP
	#FETCH1
	RTN
END

0 00001 RET
	#FETCH1
	RTN
END

0 00110 HLT
	#FETCH1
	HLT
	RTN
END

; OOOOOOAA ABBBRRRR XXXXRRRR
2 00111 MOV REG REG
	#FETCH2
	R BYTE CS:$IPO OI IPC1
	RSO2 RSI1
	RTN
END

; OOOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC 
2 00111 MOV REG IMM16
	#FETCH2
	R WORD CS:$IPO RSI1 IPC2
	RTN
END

; OOOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC CCCCCCCC
2 00111 MOV REG [REG+IMM16]
	#FETCH2
	R BYTE CS:$IPO OI IPC1
	R WORD CS:$IPO TAI IPC2
	RSO2 TAO SUB TBI
	TBO TAI						; Annoying, only tA can output on ADDR
	R WORD DS:$TAO RSI1
	RTN
END

2 00111 MOV REG [IMM16]
	#FETCH2
	R WORD CS:$IPO TAI
	R WORD DS:$TAO RSI1 IPC2
	RTN
END

; OOOOOOAA ABBBXXXX CCCCCCCC CCCCCCCC XXXXRRRR
2 00111 MOV [IMM16] REG
	#FETCH2
	R WORD CS:$IPO TAI IPC2
	R BYTE CS:$IPO OI IPC1
	W WORD DS:$TAO RSO2
	RTN
END

; OOOOOOAA ABBBXXXX CCCCCCCC CCCCCCCC CCCCCCCC CCCCCCCC
2 00111 MOV [IMM16] IMM16
	#FETCH2
	R WORD CS:$IPO TAI IPC2
	R WORD CS:$IPO TBI IPC2
	W WORD DS:$TAO TBO
	RTN
END

;; OBA
; OOOOOOAA ABBBRRRR CBCCCCCC CBCCCCCC CACCCCCC CACCCCCC
2 00111 MOV BA [IMM16] [REG+IMM16]
	#FETCH2
	R WORD CS:$IPO TBI IPC2
	RSO1 TBO SUB TAI
	R WORD DS:$TAO TBI			; tB = [REG+IMM16]
	R WORD CS:$IPO TAI IPC2
	W WORD DS:$TAO TBO			; [tA] = tB
	RTN
END

;; OBA
; OOOOOOAA ABBBXXXX CBCCCCCC CBCCCCCC CACCCCCC CACCCCCC
2 00111 MOV BA [IMM16] [IMM16]
	#FETCH2
	R WORD CS:$IPO TAI IPC2
	R WORD DS:$TAO TBI
	R WORD CS:$IPO TAI IPC2
	W WORD DS:$TAO TBO
	RTN
END

; OOOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR
2 00111 MOV [REG+IMM16] REG
	#FETCH2
	R WORD CS:$IPO TBI IPC2
	RSO1 TBO SUB TAI
	R BYTE CS:$IPO OI IPC1
	W WORD DS:$TAO RSO2
	RTN
END

;; OBA
; OOOOOOAA ABBBRRRR CBCCCCCC CBCCCCCC XXXXRRRR CACCCCCC CACCCCCC
2 00111 MOV BA [REG+IMM16] [REG+IMM16]
	#FETCH2
	R WORD CS:$IPO TBI IPC2
	RSO1 TBO SUB TAI
	R WORD DS:$TAO TBI			; tB = [REG+IMM16]
	R BYTE CS:$IPO II IPC1
	R WORD CS:$IPO TAI IPC2
	RSO2 TAO SUB TAI			; tA = REG+IMM16
	W WORD DS:$TAO TBO			; [tA] = tB
	RTN
END

2 01001 ADD REG REG
	#FETCH2
	R CS:$IPO OI IPC1
	RSO1 RSO2 ADD TAI
	TAO RSI1
	RTN
END

2 01010 SUB REG REG
	#FETCH2
	R CS:$IPO OI IPC1
	RSO1 RSO2 SUB TAI
	TAO RSI1
	RTN
END

1 00010 JMP IMM16 *
	#FETCH2
	R WORD CS:$IPO JMP
	RTN
END

1 00011 JZ IMM16 *
	#FETCH4
	RTN
END

1 00011 JZ IMM16 +ZF -CF -SF
	#FETCH2
	R WORD CS:$IPO JMP
	RTN
END
