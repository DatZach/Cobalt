;
;	Cobalt CPU Microcode
;

; TODO $RSO2 is an illegal operation, RSO2 can only output on ALUb BUS or DATA BUS

revision 3

;
;	Macros
;

# FETCH1
	R WORD CS:$IPO II IPC1
END

# FETCH2
	R WORD CS:$IPO II IPC2
END

# FETCH4
	R WORD CS:$IPO II IPC4
END

# ILLEGAL
	#FETCH1
	TAI	4 IPC2					; TODO Only 1 usage of the const4 microcode
	INTLATCH 1                  ; TODO Merge up?
	RTN
END

;
;	0 OPERANDS - TTOOOOXX XXXXXXXX
;

00 0000 NOP
	#FETCH1
	RTN
END

00 0001 __IRQ_DISPATCH
	#FETCH1
    INTENLATCH 0            ; TODO Merge up
	IPO TBI					; Store IP
	SPO SUB 2 SPI
	W WORD SS:$SPO TBO      ; TODO Some way to out IP on dbus instead of abus?
	SPO SUB 1 SPI			; Store Flags
	W BYTE SS:$SPO FO
	SPO SUB 1 SPI
	TAO TBI					; Store Exception Code (TODO TAO TBI xchg could be optimized)
	W BYTE SS:$SPO TBO
	R WORD $0 JMP			; Jump to IRQ Handler
	RTN
END

00 0010 RTI
	#FETCH1
	SPO ADD 1 SPI			; Skip Exception Code
	R BYTE SS:$SPO FI		; Restore Flags
	SPO ADD 1 SPI
	R WORD SS:$SPO JMP		; Restore IP
	SPO ADD 2 SPI
	INTLATCH 0
	INTENLATCH 1
	RTN
END

00 0011 RET
	#FETCH1
	R WORD SS:$SPO JMP
	SPO ADD 2 SPI
	RTN
END

;;	TT0100XX	UNUSED
;;	TT0101XX	UNUSED
;;	TT0110XX	UNUSED
;;	TT0111XX	UNUSED
;;	TT1000XX	UNUSED
;;	TT1001XX	UNUSED
;;	TT1010XX	UNUSED
;;	TT1011XX	UNUSED
;;	TT1100XX	UNUSED
;;	TT1101XX	UNUSED

00 1110 BRK
	#FETCH1
	TAI 2
	INTLATCH 1              ; TODO Merge up?
	RTN
END

00 1111 HLT
	#FETCH1
	HLT
	RTN
END

;
;	2 OPERANDS - TTOOOOAA ABBBXXXX
;

; TTOOOOAA ABBBRRRR XXXXRRRR
01 0000 MOV REG REG
	#FETCH2
	R BYTE CS:$IPO OI IPC1
	RSO2 RSI1
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC]
01 0000 MOV REG IMM
	#FETCH2
	R SIZ2 CS:$IPO RSI1 IPCSIZ2
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC [CCCCCCCC]
01 0000 MOV REG SIZE[SEG:REG+sIMM]
	#FETCH2
	R BYTE CS:$IPO OI IPC1
	R ORW2 CS:$IPO TBI IPCORW2		; TODO Needs sign extension
	RSO2 TAI
	TAO SUB TBO TAI					; TODO Is TAO OP TAI possible in hardware?
	R SIZ2 SEG2:$TAO RSI1
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR
01 0000 MOV REG SIZE[SEG:REG]
	#FETCH2
	R BYTE CS:$IPO OI IPC1
	R SIZ2 SEG2:$RSO2 RSI1
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC CCCCCCCC
01 0000 MOV REG [SEG:uIMM16]
	#FETCH2
	R BYTE CS:$IPO OI IPC1
    R WORD CS:$IPO TAI IPC2
	R ORW2 SEG2:$TAO RSI1
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] XXXXRRRR
01 0000 MOV SIZE[SEG:REG+sIMM] REG
	#FETCH2
    R ORW1 CS:$IPO TBI IPCORW1    ; TODO Needs sign extension
	RSO1 SUB TBO TAI			    ; TODO Is TAO OP TAI possible in hardware?
    R BYTE CS:$IPO OI IPC1
    W SIZ1 SEG1:$TAO RSO2
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] CCCCCCCC [CCCCCCCC]
01 0000 MOV SIZE[SEG:REG+sIMM] IMM
    #FETCH2
	R ORW2 CS:$IPO TAI IPCORW2    ; TODO Needs sign extension
	TAO SUB RSO1 TAI			    ; TODO Is TAO OP TAI possible in hardware?
	R SIZ2 CS:$IPO TBI IPCSIZ2
    W SIZ1 SEG1:$TAO TBO
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] XXXXRRRR CCCCCCCC [CCCCCCCC]
;01 0000 MOV BA SIZE[SEG:REG+sIMM] SIZE[SEG:REG+sIMM]
;	#FETCH2
;    R ORW1 CS:$IPO TBI IPCORW1    ; TODO Needs sign extension
;	RSO1 SUB TBO TAI			    
;    R SIZ1 SEG1:$TAO TBI           ; tB = dest size [seg:reg+sImm]
;    R BYTE CS:$IPO OI IPC1
;    R ORW2 CS:$IPO TAI IPCORW2
;    RSO2 SUB TAO TAI                ; TODO Is TAO OP TAI possible in hardware?
;    W SIZ2 SEG2:$TAO TBO
;	RTN
;END

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC [CCCCCCCC]
01 0000 MOV BA SIZE[SEG:REG+sIMM] SIZE[SEG:REG]
	#FETCH2
    R BYTE CS:$IPO OI IPC1
    R ORW2 CS:$IPO TBI IPCORW2    ; TODO Needs sign extension
	RSO2 TAI
    TAO SUB TBO TAI
    R SIZ1 SEG1:$RSO1 TBI
    W SIZ2 SEG2:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR CCCCCCCC [CCCCCCCC]
01 0000 MOV BA SIZE[SEG:REG+sIMM] [SEG:uIMM16]
	#FETCH2
    R WORD CS:$IPO TAI IPC2
    R ORW1 SEG1:$TAO TBI
    R BYTE CS:$IPO OI IPC1
    R ORW2 CS:$IPO TAO IPCORW2
    RSO2 SUB TAO TAI
    W SIZ2 SEG2:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR
01 0000 MOV SIZE[SEG:REG] REG
	#FETCH2
    R BYTE CS:$IPO OI IPC1
    W SIZ1 SEG1:$RSO1 RSO2
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR
01 0000 MOV SIZE[SEG:REG] IMM
	#FETCH2
    R SIZ2 CS:$IPO TBI IPCSIZ2
    W SIZ1 SEG1:$RSO1 TBO
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC [CCCCCCCC]
01 0000 MOV SIZE[SEG:REG] SIZE[SEG:REG+sIMM]
	#FETCH2
	R BYTE CS:$IPO OI IPC1
	R ORW2 CS:$IPO TBI IPCORW2    ; TODO Needs sign extension
	RSO2 TAI
	TAO SUB TBO TAI			        ; TODO Is TAO OP TAI possible in hardware?
	R SIZ2 SEG2:$TAO TBI
    W SIZ1 SEG1:$RSO1 TBO
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR
01 0000 MOV SIZE[SEG:REG] SIZE[SEG:REG]
	#FETCH2
    R BYTE CS:$IPO OI IPC1
    RSO2 TAI
    R SIZ2 SEG2:$TAO TBI
    W SIZ1 SEG1:$RSO1 TBO
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC CCCCCCCC
01 0000 MOV SIZE[SEG:REG] [SEG:uIMM16]
	#FETCH2
    R BYTE CS:$IPO OI IPC1
    R WORD CS:$IPO TAI IPC2
    R ORW2 SEG2:$TAO TBI
    W SIZ1 SEG1:$RSO1 TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR
01 0000 MOV [SEG:uIMM16] REG
	#FETCH2
    R WORD CS:$IPO TAI IPC2
    R BYTE CS:$IPO OI IPC1
    W ORW1 SEG1:$TAO RSO2
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC [CCCCCCCC]
01 0000 MOV [SEG:uIMM16] IMM
	#FETCH2
    R WORD CS:$IPO TAI IPC2
    R SIZ2 CS:$IPO TBI IPCSIZ2
    W ORW1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] XXXXRRRR CCCCCCCC CCCCCCCC
01 0000 MOV BA [SEG:uIMM16] SIZE[SEG:REG+sIMM]
	#FETCH2
    R ORW1 CS:$IPO TBI IPCORW1    ; TODO Needs sign extension
	RSO1 SUB TBO TAI			    
    R SIZ1 SEG1:$TAO TBI           ; tB = dest byte [seg:reg+sImm]
    R BYTE CS:$IPO OI IPC1
    R ORW2 CS:$IPO TAI IPCORW2
    W ORW2 SEG2:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR
01 0000 MOV [SEG:uIMM16] SIZE[SEG:REG]
	#FETCH2
    R WORD CS:$IPO TBI IPC2
    R BYTE CS:$IPO OI IPC1
    RSO2 TAI
    R SIZ2 SEG2:$TAO TBI
    W ORW1 SEG1:$RSO1 TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR CCCCCCCC CCCCCCCC
01 0000 MOV BA [SEG:uIMM16] [SEG:uIMM16]
	#FETCH2
    R WORD CS:$IPO TAI IPC2
    R ORW1 SEG1:$TAO TBI
    R BYTE CS:$IPO OI IPC1
    R WORD CS:$IPO TAI IPC2
    W ORW2 SEG2:$TAO TBO
	RTN
END

;
;	1 OPERAND - TTOOOOAA AFFFXXXX
;

; TTOOOOAA AFFFXXXX CCCCCCCC CCCCCCCC
10 0000 CALL IMM16 *
	#FETCH2
	R WORD CS:$IPO TAI IPC2
	IPO TBI
	SPO SUB 2 SPI
	W WORD SS:$SPO TBO
	TAO JMP
	RTN
END

; TTOOOOAA AFFFRRRR
10 00001 PUSH REG *
	#FETCH2
	RSO1 TBI                ; TODO Can save a cycle if we could $SPO RSO1
	SPO SUB 2 SPI
	W WORD SS:$SPO TBO
	RTN
END

; TTOOOOAA AFFFRRRR
10 00010 POP REG *
	#FETCH2
	SPO SUB 2 SPI
	R WORD SS:$SPO RSI1
	RTN
END

;; TODO JMP IMM8 is a NEAR JUMP

10 0011 JMP IMM16 *
	#FETCH2
	R WORD CS:$IPO JMP
	RTN
END

10 0100 JZ IMM16 *
	#FETCH4
	RTN
END
10 0100 JZ IMM16 +ZF -CF -SF
	#FETCH2
	R WORD CS:$IPO JMP
	RTN
END
10 0100 JZ IMM16 +ZF +CF -SF
	#FETCH2
	R WORD CS:$IPO JMP
	RTN
END
10 0100 JZ IMM16 +ZF -CF +SF
	#FETCH2
	R WORD CS:$IPO JMP
	RTN
END
10 0100 JZ IMM16 +ZF +CF +SF
	#FETCH2
	R WORD CS:$IPO JMP
	RTN
END

10 1110 JNZ IMM16 *
	#FETCH4
	RTN
END
10 1110 JNZ IMM16 -ZF -CF -SF
	#FETCH2
	R WORD CS:$IPO JMP
	RTN
END
10 1110 JNZ IMM16 -ZF +CF -SF
	#FETCH2
	R WORD CS:$IPO JMP
	RTN
END
10 1110 JNZ IMM16 -ZF -CF +SF
	#FETCH2
	R WORD CS:$IPO JMP
	RTN
END
10 1110 JNZ IMM16 -ZF +CF +SF
	#FETCH2
	R WORD CS:$IPO JMP
	RTN
END

11 0100 SIE IMM8 *
	#FETCH2
	R WORD CS:$IPO INTENLATCH IPC1
	RTN
END

11 0101 INT IMM8 *
	#FETCH2
	R WORD CS:$IPO TAI
	INTLATCH 1
	RTN
END
