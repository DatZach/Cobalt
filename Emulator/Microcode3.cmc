;
;	Cobalt CPU Microcode
;

; TODO MUL, DIV LNZ could be 8 instead of 16 for bytes

revision 3

;
;	Macros
;

# FETCH1
	R WORD CS:$IPO II IPC1
END

# FETCH2
	R WORD CS:$IPO II IPC2
END

# FETCH4
	R WORD CS:$IPO II IPC4
END

# ILLEGAL
	#FETCH1
	TAI	1 2 IPC2				; TODO Only 1 usage of the const4 microcode
	INTLATCH 1                  ; TODO Merge up?
	RTN
END

;
;	0 OPERANDS - TTOOOOXX XXXXXXXX
;

00 0000 NOP
	#FETCH1
	RTN
END

00 0001 __IRQ_DISPATCH
	#FETCH1
    INTENLATCH 0            ; TODO Merge up
	IPO TBI					; Store IP
	SPO SUB 2 SPI
	W WORD SS:$SPO TBO      ; TODO Some way to out IP on dbus instead of abus?
	SPO SUB 1 SPI			; Store Flags
	W BYTE SS:$SPO FO
	SPO SUB 1 SPI
	TAO TBI					; Store Exception Code (TODO TAO TBI xchg could be optimized)
	W BYTE SS:$SPO TBO
	R WORD $0 JMP			; Jump to IRQ Handler
	RTN
END

00 0010 RTI
	#FETCH1
	SPO ADD 1 SPI			; Skip Exception Code
	R BYTE SS:$SPO FI		; Restore Flags
	SPO ADD 1 SPI
	R WORD SS:$SPO JMP		; Restore IP
	SPO ADD 2 SPI
	INTLATCH 0
	INTENLATCH 1
	RTN
END

00 0011 RET
	#FETCH1
	R WORD SS:$SPO JMP
	SPO ADD 2 SPI
	RTN
END

;;	TT0100XX	UNUSED
;;	TT0101XX	UNUSED
;;	TT0110XX	UNUSED
;;	TT0111XX	UNUSED
;;	TT1000XX	UNUSED
;;	TT1001XX	UNUSED
;;	TT1010XX	UNUSED
;;	TT1011XX	UNUSED
;;	TT1100XX	UNUSED
;;	TT1101XX	UNUSED

00 1110 BRK
	#FETCH1
	TAI 2
	INTLATCH 1              ; TODO Merge up?
	RTN
END

00 1111 HLT
	#FETCH1
	HLT
	RTN
END

;
;	2 OPERANDS - TTOOOOAA ABBBXXXX
;

; TTOOOOAA ABBBRRRR XXXXRRRR
01 0000 MOV REG REG
	#FETCH2
	R BYTE CS:$IPO OI IPC1
	RSO2 RSI1
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC]
01 0000 MOV REG IMM
	#FETCH2
	R SIZ2 CS:$IPO RSI1 IPCSIZ2
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC [CCCCCCCC]
01 0000 MOV REG SIZE[SEG:REG+sIMM]
	#FETCH2
	R BYTE CS:$IPO OI IPC1
	R ORW2 CS:$IPO TBI IPCORW2		; TODO Needs sign extension
	RSO2 SUB TBO TAI
	R SIZ2 SEG2:$TAO RSI1
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR
01 0000 MOV REG SIZE[SEG:REG]
	#FETCH2
	R BYTE CS:$IPO OI IPC1
	R SIZ2 SEG2:$RSO2 RSI1
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC CCCCCCCC
01 0000 MOV REG [SEG:uIMM16]
	#FETCH2
	R BYTE CS:$IPO OI IPC1
    R WORD CS:$IPO TAI IPC2
	R ORW2 SEG2:$TAO RSI1
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] XXXXRRRR
01 0000 MOV SIZE[SEG:REG+sIMM] REG
	#FETCH2
    R ORW1 CS:$IPO TBI IPCORW1    ; TODO Needs sign extension
	RSO1 SUB TBO TAI
    R BYTE CS:$IPO OI IPC1
    W SIZ1 SEG1:$TAO RSO2
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] CCCCCCCC [CCCCCCCC]
01 0000 MOV SIZE[SEG:REG+sIMM] IMM
    #FETCH2
	R ORW2 CS:$IPO TAI IPCORW2    ; TODO Needs sign extension
	TAO SUB RSO1 TAI			  ; TODO Is TAO OP TAI possible in hardware?
	R SIZ2 CS:$IPO TBI IPCSIZ2
    W SIZ1 SEG1:$TAO TBO
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] XXXXRRRR CCCCCCCC [CCCCCCCC]
01 0000 MOV SIZE[SEG:REG+sIMM] SIZE[SEG:REG+sIMM]
	#FETCH2
    R ORW1 CS:$IPO TBI IPCORW1    ; TODO Needs sign extension
	RSO1 SUB TBO TAI
    R BYTE CS:$IPO OI IPC1
    R ORW2 CS:$IPO TBI IPCORW2
    RSO2 SUB TBO TBI                ; TODO Is TBO OP TBI possible in hardware?
    R SIZ2 SEG2:$TBO TBI
    W SIZ1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC [CCCCCCCC]
01 0000 MOV BA SIZE[SEG:REG+sIMM] SIZE[SEG:REG]
	#FETCH2
    R BYTE CS:$IPO OI IPC1
    R ORW2 CS:$IPO TBI IPCORW2    ; TODO Needs sign extension
    RSO2 SUB TBO TAI
    R SIZ1 SEG1:$RSO1 TBI
    W SIZ2 SEG2:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] XXXXRRRR CCCCCCCC CCCCCCCC
01 0000 MOV SIZE[SEG:REG+sIMM] [SEG:uIMM16]
	#FETCH2

    R ORW1 CS:$IPO TBI IPCORW1
    RSO1 SUB TBO TAI
    
    R BYTE CS:$IPO OI IPC1
    R WORD CS:$IPO TBI IPC2
    R ORW2 SEG2:$TBO TBI
    
    W SIZ1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR
01 0000 MOV SIZE[SEG:REG] REG
	#FETCH2
    R BYTE CS:$IPO OI IPC1
    W SIZ1 SEG1:$RSO1 RSO2
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC]
01 0000 MOV SIZE[SEG:REG] IMM
	#FETCH2
    R SIZ2 CS:$IPO TBI IPCSIZ2
    W SIZ1 SEG1:$RSO1 TBO
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC [CCCCCCCC]
01 0000 MOV SIZE[SEG:REG] SIZE[SEG:REG+sIMM]
	#FETCH2
    R BYTE CS:$IPO OI IPC1
    R ORW2 CS:$IPO TBI IPCORW2
	RSO2 SUB TBO TAI
	R SIZ2 SEG2:$TAO TBI
    W SIZ1 SEG1:$RSO1 TBO
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR
01 0000 MOV SIZE[SEG:REG] SIZE[SEG:REG]
	#FETCH2
    R BYTE CS:$IPO OI IPC1
	R SIZ2 SEG2:$RSO2 TBI
    W SIZ1 SEG1:$RSO1 TBO
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC CCCCCCCC
01 0000 MOV SIZE[SEG:REG] [SEG:uIMM16]
	#FETCH2
    R BYTE CS:$IPO OI IPC1
	R WORD CS:$IPO TAI IPC2
	R ORW2 SEG2:$TAO TBI
    W SIZ1 SEG1:$RSO1 TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR
01 0000 MOV [SEG:uIMM16] REG
	#FETCH2
	R WORD CS:$IPO TAI IPC2
    R BYTE CS:$IPO OI IPC1
    W ORW1 SEG1:$TAO RSO2
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC CCCCCCCC [CCCCCCCC]
01 0000 MOV [SEG:uIMM16] IMM
	#FETCH2
	R WORD CS:$IPO TAI IPC2
    R SIZ2 CS:$IPO TBI IPCSIZ2
    W ORW1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR CCCCCCCC [CCCCCCCC]
01 0000 MOV [SEG:uIMM16] SIZE[SEG:REG+sIMM]
	#FETCH2
	R WORD CS:$IPO TAI IPC2
	R BYTE CS:$IPO OI IPC1
    R ORW2 CS:$IPO TBI IPCORW2
	RSO2 SUB TBO TBI
	R SIZ2 SEG2:$TBO TBI
    W ORW1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR
01 0000 MOV [SEG:uIMM16] SIZE[SEG:REG]
	#FETCH2
	R WORD CS:$IPO TAI IPC2
	R BYTE CS:$IPO OI IPC1
    R SIZ2 SEG2:$RSO2 TBI
    W ORW1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR CCCCCCCC CCCCCCCC
01 0000 MOV [SEG:uIMM16] [SEG:uIMM16]
	#FETCH2
	R WORD CS:$IPO TAI IPC2
	R BYTE CS:$IPO OI IPC1
	R WORD CS:$IPO TBI IPC2
	R ORW2 SEG2:$TBO TBI
    W ORW1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR
01 0001 ADD REG REG
	#FETCH2
	R BYTE CS:$IPO OI IPC1
	RSO1 ADD RSO2 RSI1 FI
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC]
01 0001 ADD REG IMM
	#FETCH2
	R SIZ2 CS:$IPO TBI IPCSIZ2
	RSO1 ADD TBO RSI1 FI
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC [CCCCCCCC]
01 0001 ADD REG SIZE[SEG:REG+sIMM]
	#FETCH2
	R BYTE CS:$IPO OI IPC1
	R ORW2 CS:$IPO TBI IPCORW2		; TODO Needs sign extension
	RSO2 SUB TBO TAI
	R SIZ2 SEG2:$TAO TBI
	RSO1 ADD TBO RSI1 FI
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR
01 0001 ADD REG SIZE[SEG:REG]
	#FETCH2
	R BYTE CS:$IPO OI IPC1
	R SIZ2 SEG2:$RSO2 TBI
	RSO1 ADD TBO RSI1 FI
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC CCCCCCCC
01 0001 ADD REG [SEG:uIMM16]
	#FETCH2
	R BYTE CS:$IPO OI IPC1
    R WORD CS:$IPO TAI IPC2
	R ORW2 SEG2:$TAO TBI
	RSO1 ADD TBO RSI1 FI
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] XXXXRRRR
01 0001 ADD SIZE[SEG:REG+sIMM] REG
	#FETCH2
    R ORW1 CS:$IPO TBI IPCORW1    ; TODO Needs sign extension
	RSO1 SUB TBO TAI
    R BYTE CS:$IPO OI IPC1
	R SIZ1 SEG1:$TAO TBI
	RSO2 ADD TBO TBI FI
    W SIZ1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] CCCCCCCC [CCCCCCCC]
01 0001 ADD SIZE[SEG:REG+sIMM] IMM
    #FETCH2
	R ORW1 CS:$IPO TBI IPCORW1    ; TODO Needs sign extension
	RSO1 SUB TBO TAI
	R SIZ2 CS:$IPO TBI IPCSIZ2
    R SIZ1 SEG1:$TAO TCI
	TCO ADD TBO TBI FI
	W SIZ1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] XXXXRRRR CCCCCCCC [CCCCCCCC]
01 0001 ADD SIZE[SEG:REG+sIMM] SIZE[SEG:REG+sIMM]
    #FETCH2
	R ORW1 CS:$IPO TBI IPCORW1    ; TODO Needs sign extension
	RSO1 SUB TBO TAI
	R BYTE CS:$IPO OI IPC1
	R ORW2 CS:$IPO TBI IPCORW2    ; TODO Needs sign extension
	RSO2 SUB TBO TBI			  ; TODO Is TAO OP TAI possible in hardware?
    R SIZ1 SEG1:$TAO TCI
	R SIZ2 SEG2:$TBO TBI
	TCO ADD TBO TBI FI
	W SIZ1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] XXXXRRRR
01 0001 ADD SIZE[SEG:REG+sIMM] SIZE[SEG:REG]
    #FETCH2
	R ORW1 CS:$IPO TBI IPCORW1    ; TODO Needs sign extension
	RSO1 SUB TBO TAI
	R BYTE CS:$IPO OI IPC1
    R SIZ2 SEG2:$RSO2 TBI
	R SIZ1 SEG1:$TAO TCI
	TCO ADD TBO TBI FI
	W SIZ1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] XXXXRRRR CCCCCCCC CCCCCCCC
01 0001 ADD SIZE[SEG:REG+sIMM] [SEG:uIMM16]
    #FETCH2
	R ORW1 CS:$IPO TBI IPCORW1    ; TODO Needs sign extension
	RSO1 SUB TBO TAI
	R BYTE CS:$IPO OI IPC1
	R WORD CS:$IPO TBI IPC2
    R ORW2 SEG2:$TBO TBI
	R SIZ1 SEG1:$TAO TCI
	TCO ADD TBO TBI FI
	W SIZ1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR
01 0001 ADD SIZE[SEG:REG] REG
	#FETCH2
    R BYTE CS:$IPO OI IPC1
	R SIZ1 SEG1:$RSO1 TCI
	TCO ADD RSO2 TBI FI
    W SIZ1 SEG1:$RSO1 TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC]
01 0001 ADD SIZE[SEG:REG] IMM
	#FETCH2
    R SIZ2 CS:$IPO TCI IPCSIZ2
	R SIZ1 SEG1:$RSO1 TBI
	TCO ADD TBO TBI FI
    W SIZ1 SEG1:$RSO1 TBO
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC [CCCCCCCC]
01 0001 ADD SIZE[SEG:REG] SIZE[SEG:REG+sIMM]
	#FETCH2
    R BYTE CS:$IPO OI IPC1
    R ORW2 CS:$IPO TBI IPCORW2
	RSO2 SUB TBO TAI
	R SIZ2 SEG2:$TAO TBI
	R SIZ1 SEG1:$RSO1 TCI
	TCO ADD TBO TBI FI
    W SIZ1 SEG1:$RSO1 TBO
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR
01 0001 ADD SIZE[SEG:REG] SIZE[SEG:REG]
	#FETCH2
    R BYTE CS:$IPO OI IPC1
	R SIZ2 SEG2:$RSO2 TBI
	R SIZ1 SEG1:$RSO1 TCI
	TCO ADD TBO TBI FI
    W SIZ1 SEG1:$RSO1 TBO
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC CCCCCCCC
01 0001 ADD SIZE[SEG:REG] [SEG:uIMM16]
	#FETCH2
    R BYTE CS:$IPO OI IPC1
	R WORD CS:$IPO TAI IPC2
	R ORW2 SEG2:$TAO TBI
	R SIZ1 SEG1:$RSO1 TCI
	TCO ADD TBO TBI FI
    W SIZ1 SEG1:$RSO1 TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR
01 0001 ADD [SEG:uIMM16] REG
	#FETCH2
	R WORD CS:$IPO TAI IPC2
    R BYTE CS:$IPO OI IPC1
	R ORW1 SEG1:$TAO TCI
	TCO ADD RSO2 TBI FI
    W ORW1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC CCCCCCCC [CCCCCCCC]
01 0001 ADD [SEG:uIMM16] IMM
	#FETCH2
	R WORD CS:$IPO TAI IPC2
    R SIZ2 CS:$IPO TBI IPCSIZ2
	R ORW1 SEG1:$TAO TCI
	TCO ADD TBO TBI FI
    W ORW1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR CCCCCCCC [CCCCCCCC]
01 0001 ADD [SEG:uIMM16] SIZE[SEG:REG+sIMM]
	#FETCH2
	R WORD CS:$IPO TAI IPC2
	R BYTE CS:$IPO OI IPC1
    R ORW2 CS:$IPO TBI IPCORW2
	RSO2 SUB TBO TBI
	R SIZ2 SEG2:$TBO TBI
	R ORW1 SEG1:$TAO TCI
	TCO ADD TBO TBI FI
    W ORW1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR
01 0001 ADD [SEG:uIMM16] SIZE[SEG:REG]
	#FETCH2
	R WORD CS:$IPO TAI IPC2
	R BYTE CS:$IPO OI IPC1
    R SIZ2 SEG2:$RSO2 TBI
	R ORW1 SEG1:$TAO TCI
	TCO ADD TBO TBI FI
    W ORW1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR CCCCCCCC CCCCCCCC
01 0001 ADD [SEG:uIMM16] [SEG:uIMM16]
	#FETCH2
	R WORD CS:$IPO TAI IPC2
	R BYTE CS:$IPO OI IPC1
	R WORD CS:$IPO TBI IPC2
	R ORW2 SEG2:$TBO TBI
	R ORW1 SEG1:$TAO TCI
	TCO ADD TBO TBI FI
    W ORW1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR
01 0010 SUB REG REG
	#FETCH2
	R BYTE CS:$IPO OI IPC1
	RSO1 SUB RSO2 RSI1 FI
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC]
01 0010 SUB REG IMM
	#FETCH2
	R SIZ2 CS:$IPO TBI IPCSIZ2
	RSO1 SUB TBO RSI1 FI
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC [CCCCCCCC]
01 0010 SUB REG SIZE[SEG:REG+sIMM]
	#FETCH2
	R BYTE CS:$IPO OI IPC1
	R ORW2 CS:$IPO TBI IPCORW2		; TODO Needs sign extension
	RSO2 SUB TBO TAI
	R SIZ2 SEG2:$TAO TBI
	RSO1 SUB TBO RSI1 FI
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR
01 0010 SUB REG SIZE[SEG:REG]
	#FETCH2
	R BYTE CS:$IPO OI IPC1
	R SIZ2 SEG2:$RSO2 TBI
	RSO1 SUB TBO RSI1 FI
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC CCCCCCCC
01 0010 SUB REG [SEG:uIMM16]
	#FETCH2
	R BYTE CS:$IPO OI IPC1
    R WORD CS:$IPO TAI IPC2
	R ORW2 SEG2:$TAO TBI
	RSO1 SUB TBO RSI1 FI
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] XXXXRRRR
01 0010 SUB SIZE[SEG:REG+sIMM] REG
	#FETCH2
    R ORW1 CS:$IPO TBI IPCORW1    ; TODO Needs sign extension
	RSO1 SUB TBO TAI
    R BYTE CS:$IPO OI IPC1
	R SIZ1 SEG1:$TAO TBI
	TBO SUB RSO2 TBI FI
    W SIZ1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] CCCCCCCC [CCCCCCCC]
01 0010 SUB SIZE[SEG:REG+sIMM] IMM
    #FETCH2
	R ORW1 CS:$IPO TBI IPCORW1    ; TODO Needs sign extension
	RSO1 SUB TBO TAI
	R SIZ2 CS:$IPO TBI IPCSIZ2
    R SIZ1 SEG1:$TAO TCI
	TCO SUB TBO TBI FI
	W SIZ1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] XXXXRRRR CCCCCCCC [CCCCCCCC]
01 0010 SUB SIZE[SEG:REG+sIMM] SIZE[SEG:REG+sIMM]
    #FETCH2
	R ORW1 CS:$IPO TBI IPCORW1    ; TODO Needs sign extension
	RSO1 SUB TBO TAI
	R BYTE CS:$IPO OI IPC1
	R ORW2 CS:$IPO TBI IPCORW2    ; TODO Needs sign extension
	RSO2 SUB TBO TBI			  ; TODO Is TAO OP TAI possible in hardware?
    R SIZ1 SEG1:$TAO TCI
	R SIZ2 SEG2:$TBO TBI
	TCO SUB TBO TBI FI
	W SIZ1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] XXXXRRRR
01 0010 SUB SIZE[SEG:REG+sIMM] SIZE[SEG:REG]
    #FETCH2
	R ORW1 CS:$IPO TBI IPCORW1    ; TODO Needs sign extension
	RSO1 SUB TBO TAI
	R BYTE CS:$IPO OI IPC1
    R SIZ2 SEG2:$RSO2 TBI
	R SIZ1 SEG1:$TAO TCI
	TCO SUB TBO TBI FI
	W SIZ1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] XXXXRRRR CCCCCCCC CCCCCCCC
01 0010 SUB SIZE[SEG:REG+sIMM] [SEG:uIMM16]
    #FETCH2
	R ORW1 CS:$IPO TBI IPCORW1    ; TODO Needs sign extension
	RSO1 SUB TBO TAI
	R BYTE CS:$IPO OI IPC1
	R WORD CS:$IPO TBI IPC2
    R ORW2 SEG2:$TBO TBI
	R SIZ1 SEG1:$TAO TCI
	TCO SUB TBO TBI FI
	W SIZ1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR
01 0010 SUB SIZE[SEG:REG] REG
	#FETCH2
    R BYTE CS:$IPO OI IPC1
	R SIZ1 SEG1:$RSO1 TCI
	TCO SUB RSO2 TBI FI
    W SIZ1 SEG1:$RSO1 TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC]
01 0010 SUB SIZE[SEG:REG] IMM
	#FETCH2
    R SIZ2 CS:$IPO TBI IPCSIZ2
	R SIZ1 SEG1:$RSO1 TCI
	TCO SUB TBO TBI FI
    W SIZ1 SEG1:$RSO1 TBO
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC [CCCCCCCC]
01 0010 SUB SIZE[SEG:REG] SIZE[SEG:REG+sIMM]
	#FETCH2
    R BYTE CS:$IPO OI IPC1
    R ORW2 CS:$IPO TBI IPCORW2
	RSO2 SUB TBO TAI
	R SIZ2 SEG2:$TAO TBI
	R SIZ1 SEG1:$RSO1 TCI
	TCO SUB TBO TBI FI
    W SIZ1 SEG1:$RSO1 TBO
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR
01 0010 SUB SIZE[SEG:REG] SIZE[SEG:REG]
	#FETCH2
    R BYTE CS:$IPO OI IPC1
	R SIZ2 SEG2:$RSO2 TBI
	R SIZ1 SEG1:$RSO1 TCI
	TCO SUB TBO TBI FI
    W SIZ1 SEG1:$RSO1 TBO
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC CCCCCCCC
01 0010 SUB SIZE[SEG:REG] [SEG:uIMM16]
	#FETCH2
    R BYTE CS:$IPO OI IPC1
	R WORD CS:$IPO TAI IPC2
	R ORW2 SEG2:$TAO TBI
	R SIZ1 SEG1:$RSO1 TCI
	TCO SUB TBO TBI FI
    W SIZ1 SEG1:$RSO1 TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR
01 0010 SUB [SEG:uIMM16] REG
	#FETCH2
	R WORD CS:$IPO TAI IPC2
    R BYTE CS:$IPO OI IPC1
	R ORW1 SEG1:$TAO TCI
	TCO SUB RSO2 TBI FI
    W ORW1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC CCCCCCCC [CCCCCCCC]
01 0010 SUB [SEG:uIMM16] IMM
	#FETCH2
	R WORD CS:$IPO TAI IPC2
    R SIZ2 CS:$IPO TBI IPCSIZ2
	R ORW1 SEG1:$TAO TCI
	TCO SUB TBO TBI FI
    W ORW1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR CCCCCCCC [CCCCCCCC]
01 0010 SUB [SEG:uIMM16] SIZE[SEG:REG+sIMM]
	#FETCH2
	R WORD CS:$IPO TAI IPC2
	R BYTE CS:$IPO OI IPC1
    R ORW2 CS:$IPO TBI IPCORW2
	RSO2 SUB TBO TBI
	R SIZ2 SEG2:$TBO TBI
	R ORW1 SEG1:$TAO TCI
	TCO SUB TBO TBI FI
    W ORW1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR
01 0010 SUB [SEG:uIMM16] SIZE[SEG:REG]
	#FETCH2
	R WORD CS:$IPO TAI IPC2
	R BYTE CS:$IPO OI IPC1
    R SIZ2 SEG2:$RSO2 TBI
	R ORW1 SEG1:$TAO TCI
	TCO SUB TBO TBI FI
    W ORW1 SEG1:$TAO TBO
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR CCCCCCCC CCCCCCCC
01 0010 SUB [SEG:uIMM16] [SEG:uIMM16]
	#FETCH2
	R WORD CS:$IPO TAI IPC2
	R BYTE CS:$IPO OI IPC1
	R WORD CS:$IPO TBI IPC2
	R ORW2 SEG2:$TBO TBI
	R ORW1 SEG1:$TAO TCI
	TCO SUB TBO TBI FI
    W ORW1 SEG1:$TAO TBO
	RTN
END

; TODO Signed mul
; TTOOOOAA ABBBRRRR XXXXRRRR
01 0011 MUL REG IMM
	#FETCH2
	R SIZ2 CS:$IPO TBI IPCSIZ2
	0 TAI LI16
A:	TBO ROR 1 TBI FI
	JC @C
B:	RSO1 ROL 1 RSI1			; c = 0
	LNZ @A
	TAO RSI1
	RTN
C:	TAO ADD RSO1 TAI TGC	; c = 1
	RSO1 ROL 1 RSI1			; c = 0
	LNZ @A
	TAO RSI1
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR
01 0011 MUL REG REG
	#FETCH2					; 69-85 Cycles
	R CS:$IPO OI IPC1
	RSO2 TBI
	0 TAI LI16
A:	TBO ROR 1 TBI FI
	JC @C
B:	RSO1 ROL 1 RSI1			; c = 0
	LNZ @A
	TAO RSI1
	RTN
C:	TAO ADD RSO1 TAI TGC	; c = 1
	RSO1 ROL 1 RSI1			; c = 0
	LNZ @A
	TAO RSI1
	RTN
END

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC [CCCCCCCC]
01 0011 MUL REG SIZE[SEG:REG+sIMM]
	#FETCH2
	R BYTE CS:$IPO OI IPC1
	R ORW2 CS:$IPO TBI IPCORW2		; TODO Needs sign extension
	RSO2 SUB TBO TAI
	R SIZ2 SEG2:$TAO TBI
	0 TAI LI16
A:	TBO ROR 1 TBI FI
	JC @C
B:	RSO1 ROL 1 RSI1			; c = 0
	LNZ @A
	TAO RSI1
	RTN
C:	TAO ADD RSO1 TAI TGC	; c = 1
	RSO1 ROL 1 RSI1			; c = 0
	LNZ @A
	TAO RSI1
	;RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR
01 0011 MUL REG SIZE[SEG:REG]
	#FETCH2
	R BYTE CS:$IPO OI IPC1
	R SIZ2 SEG2:$RSO2 TBI
	0 TAI LI16
A:	TBO ROR 1 TBI FI
	JC @C
B:	RSO1 ROL 1 RSI1			; c = 0
	LNZ @A
	TAO RSI1
	RTN
C:	TAO ADD RSO1 TAI TGC	; c = 1
	RSO1 ROL 1 RSI1			; c = 0
	LNZ @A
	TAO RSI1
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC CCCCCCCC
01 0011 MUL REG [SEG:uIMM16]
	#FETCH2
	R BYTE CS:$IPO OI IPC1
    R WORD CS:$IPO TAI IPC2
	R ORW2 SEG2:$TAO TBI
	0 TAI LI16
A:	TBO ROR 1 TBI FI
	JC @C
B:	RSO1 ROL 1 RSI1			; c = 0
	LNZ @A
	TAO RSI1
	RTN
C:	TAO ADD RSO1 TAI TGC	; c = 1
	RSO1 ROL 1 RSI1			; c = 0
	LNZ @A
	TAO RSI1
	RTN
END

; NOTE Theses are not implementable without a tD register
; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] XXXXRRRR
; 01 0011 MUL SIZE[SEG:REG+sIMM] REG

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] CCCCCCCC [CCCCCCCC]
; 01 0011 MUL SIZE[SEG:REG+sIMM] IMM

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] XXXXRRRR CCCCCCCC [CCCCCCCC]
; 01 0011 MUL SIZE[SEG:REG+sIMM] SIZE[SEG:REG+sIMM]

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] XXXXRRRR
; 01 0011 MUL SIZE[SEG:REG+sIMM] SIZE[SEG:REG]

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC] XXXXRRRR CCCCCCCC CCCCCCCC
; 01 0011 MUL SIZE[SEG:REG+sIMM] [SEG:uIMM16]

; TTOOOOAA ABBBRRRR XXXXRRRR
; 01 0011 MUL SIZE[SEG:REG] REG

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC]
; 01 0011 MUL SIZE[SEG:REG] IMM

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC [CCCCCCCC]
; 01 0011 MUL SIZE[SEG:REG] SIZE[SEG:REG+sIMM]

; TTOOOOAA ABBBRRRR XXXXRRRR
; 01 0011 MUL SIZE[SEG:REG] SIZE[SEG:REG]

; TTOOOOAA ABBBRRRR XXXXRRRR CCCCCCCC CCCCCCCC
; 01 0011 MUL SIZE[SEG:REG] [SEG:uIMM16]

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR
; 01 0011 MUL [SEG:uIMM16] REG

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC CCCCCCCC [CCCCCCCC]
; 01 0011 MUL [SEG:uIMM16] IMM

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR CCCCCCCC [CCCCCCCC]
; 01 0011 MUL [SEG:uIMM16] SIZE[SEG:REG+sIMM]

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR
; 01 0011 MUL [SEG:uIMM16] SIZE[SEG:REG]

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC XXXXRRRR CCCCCCCC CCCCCCCC
; 01 0011 MUL [SEG:uIMM16] [SEG:uIMM16]

; TTOOOOAA ABBBRRRR XXXXRRRR
; TODO Signed div
01 0100 DIV REG REG
	#FETCH2						; RSO1 = N, RSO2 = D
	R CS:$IPO OI IPC1
	0 SUB RSO2 FI
	JC @A
	TAI INTLATCH 1				; DIV_BY_0
	RTN
A:	0 TAI LI16
B:	RSO1 ROL 1 RSI1 FI
	TAO ROL 1 TAI FI
	TAO SUB RSO2 TBI FI
	JC @C
	TBO TAI
C:	TGC LNZ @B
	RSO1 ROL 1 RSI1 FI
	TAO RSI2
	RTN
END

; TTOOOOAA ABBBRRRR XXXXRRRR
01 1011 CMP REG REG
	#FETCH2
	R BYTE CS:$IPO OI IPC1
	RSO1 SUB RSO2 FI
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC]
01 1011 CMP REG IMM
	#FETCH2
	R SIZ2 CS:$IPO TBI IPCSIZ2
	RSO1 SUB TBO FI
	RTN
END

;; TODO CMP ...

; TTOOOOAA ABBBRRRR XXXXRRRR
01 1100 BIT REG REG
	#FETCH2
	R BYTE CS:$IPO OI IPC1
	RSO1 AND RSO2 FI
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC]
01 1100 BIT REG IMM
	#FETCH2
	R SIZ2 CS:$IPO TBI IPCSIZ2
	RSO1 AND TBO FI
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC [CCCCCCCC]
01 1101 BCMP SIZE[SEG:REG] IMM
	#FETCH2
	R SIZ2 CS:$IPO TBI IPCSIZ2
	R ORW1 SEG1:$RSO1 TAI
	TAO SUB TBO FI
	RSO1 ADD 1 RSI1
	RTN
END

; 6 cycles
; TTOOOOAA ABBBRRRR XXXXRRRR
01 1110 BMOV SIZE[SEG:REG] SIZE[SEG:REG]
	#FETCH2
    R BYTE CS:$IPO OI IPC1
	R SIZ2 SEG2:$RSO2 TBI
    W SIZ1 SEG1:$RSO1 TBO
	RSO1 ADD 1 RSI1
	RSO2 ADD 1 RSI2
	RTN
END

; TTOOOOAA ABBBRRRR CCCCCCCC CCCCCCCC
; 4-5 Cycles
; TODO Other operands
01 1111 LNZ REG IMM16
	#FETCH2
	R WORD CS:$IPO TAI IPC2
	RSO1 SUB 1 RSI1 FI
	JNF @JUMP
	RTN
JUMP:
	TAO JMP
	RTN
END

;
;	1 OPERAND - TTOOOOAA AFFFXXXX
;

; TTOOOOAA AFFFXXXX CCCCCCCC CCCCCCCC
10 0000 CALL IMM16 *
	#FETCH2
	R WORD CS:$IPO TAI IPC2
	IPO TBI
	SPO SUB 2 SPI
	W WORD SS:$SPO TBO
	TAO JMP
	RTN
END

; TTOOOOAA AFFFRRRR
10 00001 PUSH REG *
	#FETCH2
	RSO1 TBI                ; TODO Can save a cycle if we could $SPO RSO1
	SPO SUB 2 SPI
	W WORD SS:$SPO TBO
	RTN
END

; TTOOOOAA AFFFRRRR
10 00010 POP REG *
	#FETCH2
	R WORD SS:$SPO RSI1
	SPO ADD 2 SPI
	RTN
END

; TTOOOOAA AFFFRRRR
11 1000 DEC REG *
	#FETCH2
	RSO1 SUB 1 RSI1
	RTN
END

; TTOOOOAA AFFFRRRR
11 1001 INC REG *
	#FETCH2
	RSO1 ADD 1 RSI1
	RTN
END

;; TODO JMP IMM8 is a NEAR JUMP

10 0011 JMP IMM16 *
	#FETCH2
	R WORD CS:$IPO JMP
	RTN
END

10 0100 JZ IMM16 *
	#FETCH4
	RTN
END
10 0100 JZ IMM16 +ZF -CF -SF
	#FETCH2
	R WORD CS:$IPO JMP
	RTN
END
10 0100 JZ IMM16 +ZF +CF -SF
	#FETCH2
	R WORD CS:$IPO JMP
	RTN
END
10 0100 JZ IMM16 +ZF -CF +SF
	#FETCH2
	R WORD CS:$IPO JMP
	RTN
END
10 0100 JZ IMM16 +ZF +CF +SF
	#FETCH2
	R WORD CS:$IPO JMP
	RTN
END

10 1110 JNZ IMM16 *
	#FETCH4
	RTN
END
10 1110 JNZ IMM16 -ZF -CF -SF
	#FETCH2
	R WORD CS:$IPO JMP
	RTN
END
10 1110 JNZ IMM16 -ZF +CF -SF
	#FETCH2
	R WORD CS:$IPO JMP
	RTN
END
10 1110 JNZ IMM16 -ZF -CF +SF
	#FETCH2
	R WORD CS:$IPO JMP
	RTN
END
10 1110 JNZ IMM16 -ZF +CF +SF
	#FETCH2
	R WORD CS:$IPO JMP
	RTN
END

11 0100 SIE IMM8 *
	#FETCH2
	R BYTE CS:$IPO INTENLATCH IPC1
	RTN
END

11 0101 INT IMM8 *
	#FETCH2
	R BYTE CS:$IPO TAI
	INTLATCH 1
	RTN
END
