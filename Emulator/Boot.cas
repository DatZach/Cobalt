;
;	Cobalt Boot ROM
;	0xF000 - 0xFFFF
;

format bin
origin 0x0000

nop								; Required for CPU boot

Main:
	mov		word [0x0000], IRQ	; We cannot disable interrupts, set this immediately!!
	mov		sp, 0x20 ; 0xEFF0			; Stack lives right below ROM space
	
	jmp EchoKeyboard

IRQ:
	push	r0
	push	ds

	mov		ds, 0xC000
	mov		r0, byte [0x08]
	mov		ds, 0x0000
	mov		byte [scancode], r0
	
	pop		ds
	pop		r0
	rti

EchoKeyboard:
	mov		ds, 0x0000
	mov		r0, byte [scancode]
	cmp		r0, 0
	jz		EchoKeyboard

	cmp		r0, 0x2A			; LSHIFT Pressed
	jnz		EchoKeyboard_1
	mov		byte [isShift], 1
	mov		byte [scancode], 0
	jmp		EchoKeyboard
EchoKeyboard_1:
	cmp		r0, 0xAA			; LSHIFT Released
	jnz		EchoKeyboard_2
	mov		byte [isShift], 0
	mov		byte [scancode], 0
	jmp		EchoKeyboard
EchoKeyboard_2:
	cmp		r0, 0x39
	jnz		EchoKeyboard_4
	mov		r0, word [X]
	add		r0, 2
	mov		word [X], r0
	mov		byte [scancode], 0
	jmp		EchoKeyboard
EchoKeyboard_4:

	bit		r0, 0x80			; Released key
	jnz		EchoKeyboard

	mov		r2, byte [isShift]
	cmp		r2, 0
	jz		EchoKeyboard_3
	add		r0, 35
EchoKeyboard_3:

	sub		r0, 0x10			; Q
	mov		ds, 0x4000
	add		r0, ASCIILookup
	mov		r3, byte [r0]
	;hlt
	mov		ds, 0x0000
	mov		r1, word [X]

	mov		ds, 0x8000
	mov		byte [r1+0], 0x0F
	mov		byte [r1+1], r3

	add		r1, 2
	mov		ds, 0x0000
	mov		word [X], r1

	mov		byte [scancode], 0
	jmp		EchoKeyboard

TestVideo:
	mov		r3, 0x00
	mov		r0, 0x0000
Reload:
	mov		r1, Message
Loop:
	mov		ds, 0x4000
	mov		r2, byte [r1]
	cmp		r2, 0
	jz		Done
	mov		ds, 0x8000
	mov		byte [r0+0], r3
	mov		byte [r0+1], r2
	add		r0, 2
	add		r1, 1
	add		r3, 1
	jmp		Loop
Done:
	ret

;
;	Print
;	Arguments
;		r0		Memory index (word aligned)
;		r1		String to print
;		r3		Color
;	Clobbered
;		r2
;
Print:
	mov		ds, 0x4000
	mov		r2, byte [r1]
	cmp		r2, 0
	jz		PrintDone
	mov		ds, 0x8000
	mov		byte [r0+0], r3
	mov		byte [r0+1], r2
	add		r0, 2
	add		r1, 1
	jmp		Print
PrintDone:
	ret

TestTerminalLayout:
	mov		r0, 0
	mov		r1, StrHeader
	mov		r3, 0x40
	call	Print

	mov		r0, 124
	mov		r1, StrTimeLHS
	mov		r3, 0x45
	call	Print
	mov		r0, 126
	mov		r1, StrTime
	mov		r3, 0x50
	call	Print
	mov		r0, 158
	mov		r1, StrTimeRHS
	mov		r3, 0x45
	call	Print

	mov		r0, 160
	mov		r1, StrCmd
	mov		r3, 0x0F
	call	Print

	hlt
	ret

Message: db "0123456789ABCDEF^0"
ASCIILookup: db "qwertyuiop[]  asdfghjkl_'  \zxcvbnmQWERTYUIOP{}  ASDFGHJKL_^"  |ZXCVBNM<>?"

StrHeader: db "Terminal                                                      ^0^0"
StrTimeLHS: db "^x80^0^0^0"
StrTimeRHS: db "^x81^0^0^0"
StrTime: db "2024-01-14 14:09^0^0^0"
StrCmd: db "^x7Fld^0"

X: dw 0
isShift: db 0
db 0
scancode: db 0
db 0